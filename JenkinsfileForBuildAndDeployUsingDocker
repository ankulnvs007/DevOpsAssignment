import com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalk
pipeline {
    agent any

    environment {
        IMAGE_NAME = 'ankulnvs007/devopsdotnetapi'
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'dotnet build --configuration Release'
            }
        }

        stage('Test') {
            steps {
                sh 'dotnet test'
            }
        }

        stage('Docker Build') {
            steps {
                // Build your Docker image
                script {
                    docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    // Login to Docker Hub (or your Docker registry)
                    // Make sure to set your credentials in Jenkins credential store
                    docker.withRegistry('https://index.docker.io/v1/', 'docker_login') {
                        // Push your Docker image
                        docker.image("${IMAGE_NAME}:${IMAGE_TAG}").push()
                    }
                }
            }
        }

        stage('Run Container') {
            steps {
                script {
                    // Stop and remove the existing container if it exists
                    sh 'docker stop devopsdotnet || true'
                    sh 'docker rm devopsdotnet || true'
                    // Run the new container
                    sh "docker run -d --name devopsdotnet -p 8000:80 ${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
        stage('Deploy to AWS') {
            steps {
                script {
                    def elasticBeanstalk = [
                        $class: 'AWSEBDeploymentBuilder',
                        credentialsId: 'jenkins-user-credential',
                        region: 'ap-south-1',
                        applicationName: 'jenkins-beanstalk',
                        environmentName: 'jenkins-beanstalk-env'
                    ]
        
                    try {
                        def deployer = new AWSEBDeployment()
                        deployer.deploy elasticBeanstalk
                        echo "Application deployed successfully"
                    } catch (err) {
                        echo "Error deploying application to Elastic Beanstalk environment: ${err.message}"
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
    }
}
